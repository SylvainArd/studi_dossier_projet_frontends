name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create .ssh directory with correct permissions
        run: |
          sudo mkdir -p /home/runner/.ssh
          sudo chmod 700 /home/runner/.ssh

      - name: Add EC2 Instance 1 to known_hosts
        run: |
          sudo ssh-keyscan -H ${{ secrets.EC2_FRONTEND_HOST_1 }} | sudo tee -a /home/runner/.ssh/known_hosts

      - name: Add EC2 Instance 2 to known_hosts
        run: |
          sudo ssh-keyscan -H ${{ secrets.EC2_FRONTEND_HOST_2 }} | sudo tee -a /home/runner/.ssh/known_hosts

      - name: Generate public key from private key
        env:
          KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "${{ secrets.EC2_KEY }}" | sudo tee /home/runner/key.pem
          sudo chmod 600 /home/runner/key.pem
          sudo ssh-keygen -y -f /home/runner/key.pem | sudo tee /home/runner/key.pub

      - name: Debug Check generated public key
        run: sudo cat /home/runner/key.pub

      - name: Verify permissions and existence of key files
        run: |
          sudo ls -la /home/runner
          sudo ls -la /home/runner/.ssh
          sudo ls -la /home/runner/key.pem

      - name: Add public key to EC2 Instance 1 authorized_keys
        env:
          HOST: ${{ secrets.EC2_FRONTEND_HOST_1 }}
          USERNAME: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "${{ secrets.EC2_KEY }}" | sudo tee /home/runner/key.pem
          sudo chmod 600 /home/runner/key.pem
          sudo cat /home/runner/key.pub | sudo ssh -o StrictHostKeyChecking=no -i /home/runner/key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_FRONTEND_HOST_1 }} "sudo mkdir -p ~/.ssh && sudo chmod 700 ~/.ssh && sudo tee -a ~/.ssh/authorized_keys"
          sudo rm /home/runner/key.pem /home/runner/key.pub

      - name: Verify SSH key permissions and authorized_keys on EC2 Instance 1
        env:
          HOST: ${{ secrets.EC2_FRONTEND_HOST_1 }}
          USERNAME: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "${{ secrets.EC2_KEY }}" | sudo tee /home/runner/key.pem
          sudo chmod 600 /home/runner/key.pem
          sudo ssh -vvv -o StrictHostKeyChecking=no -i /home/runner/key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_FRONTEND_HOST_1 }} "sudo ls -la ~/.ssh && sudo cat ~/.ssh/authorized_keys"
          sudo rm /home/runner/key.pem

      - name: Add public key to EC2 Instance 2 authorized_keys
        env:
          HOST: ${{ secrets.EC2_FRONTEND_HOST_2 }}
          USERNAME: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "${{ secrets.EC2_KEY }}" | sudo tee /home/runner/key.pem
          sudo chmod 600 /home/runner/key.pem
          sudo ssh-keygen -y -f /home/runner/key.pem | sudo tee /home/runner/key.pub
          sudo cat /home/runner/key.pub | sudo ssh -o StrictHostKeyChecking=no -i /home/runner/key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_FRONTEND_HOST_2 }} "sudo mkdir -p ~/.ssh && sudo chmod 700 ~/.ssh && sudo tee -a ~/.ssh/authorized_keys"
          sudo rm /home/runner/key.pem /home/runner/key.pub

      - name: Verify SSH key permissions and authorized_keys on EC2 Instance 2
        env:
          HOST: ${{ secrets.EC2_FRONTEND_HOST_2 }}
          USERNAME: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "${{ secrets.EC2_KEY }}" | sudo tee /home/runner/key.pem
          sudo chmod 600 /home/runner/key.pem
          sudo ssh -vvv -o StrictHostKeyChecking=no -i /home/runner/key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_FRONTEND_HOST_2 }} "sudo ls -la ~/.ssh && sudo cat ~/.ssh/authorized_keys"
          sudo rm /home/runner/key.pem

  copy:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create .ssh directory with correct permissions
        run: |
          sudo mkdir -p /home/runner/.ssh
          sudo chmod 700 /home/runner/.ssh

      - name: Add EC2 Instance 1 to known_hosts
        run: |
          sudo ssh-keyscan -H ${{ secrets.EC2_FRONTEND_HOST_1 }} | sudo tee -a /home/runner/.ssh/known_hosts

      - name: Add EC2 Instance 2 to known_hosts
        run: |
          sudo ssh-keyscan -H ${{ secrets.EC2_FRONTEND_HOST_2 }} | sudo tee -a /home/runner/.ssh/known_hosts

      - name: Check environment variables for EC2 Instance 1
        run: |
          sudo echo "HOST=${{ secrets.EC2_FRONTEND_HOST_1 }}"
          sudo echo "USERNAME=${{ secrets.EC2_USER }}"
          sudo echo "KEY length=$(sudo echo -n "${{ secrets.EC2_KEY }}" | sudo wc -c)"

      - name: Copy code to EC2 Instance 1
        env:
          HOST: ${{ secrets.EC2_FRONTEND_HOST_1 }}
          USERNAME: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_KEY }}
        run: |
          sudo echo "${{ secrets.EC2_KEY }}" | sudo tee /home/runner/key.pem
          sudo chmod 600 /home/runner/key.pem
          sudo rsync -avz -e "ssh -o StrictHostKeyChecking=no -i /home/runner/key.pem" hello-world-frontend/ ${{ secrets.EC2_USER }}@${{ secrets.EC2_FRONTEND_HOST_1 }}:/home/${{ secrets.EC2_USER }}/hello-world-frontend/
          sudo rm /home/runner/key.pem

      - name: Check environment variables for EC2 Instance 2
        run: |
          sudo echo "HOST=${{ secrets.EC2_FRONTEND_HOST_2 }}"
          sudo echo "USERNAME=${{ secrets.EC2_USER }}"
          sudo echo "KEY length=$(sudo echo -n "${{ secrets.EC2_KEY }}" | sudo wc -c)"

      - name: Copy code to EC2 Instance 2
        env:
          HOST: ${{ secrets.EC2_FRONTEND_HOST_2 }}
          USERNAME: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_KEY }}
        run: |
          sudo echo "${{ secrets.EC2_KEY }}" | sudo tee /home/runner/key.pem
          sudo chmod 600 /home/runner/key.pem
          sudo rsync -avz -e "ssh -o StrictHostKeyChecking=no -i /home/runner/key.pem" hello-world-frontend/ ${{ secrets.EC2_USER }}@${{ secrets.EC2_FRONTEND_HOST_2 }}:/home/${{ secrets.EC2_USER }}/hello-world-frontend/
          sudo rm /home/runner/key.pem

  test:
    runs-on: ubuntu-latest
    needs: copy

    steps:
      - name: Create .ssh directory with correct permissions
        run: |
          sudo mkdir -p /home/runner/.ssh
          sudo chmod 700 /home/runner/.ssh

      - name: Add EC2 Instance 1 to known_hosts
        run: |
          sudo ssh-keyscan -H ${{ secrets.EC2_FRONTEND_HOST_1 }} | sudo tee -a /home/runner/.ssh/known_hosts

      - name: Test on EC2 Instance 1
        env:
          HOST: ${{ secrets.EC2_FRONTEND_HOST_1 }}
          USERNAME: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_KEY }}
        run: |
          sudo echo "${{ secrets.EC2_KEY }}" | sudo tee /home/runner/key.pem
          sudo chmod 600 /home/runner/key.pem
          sudo ssh -o StrictHostKeyChecking=no -i /home/runner/key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_FRONTEND_HOST_1 }} "sudo curl -fsSL https://rpm.nodesource.com/setup_20.x | sudo bash -"
          sudo ssh -o StrictHostKeyChecking=no -i /home/runner/key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_FRONTEND_HOST_1 }} "sudo yum install -y nodejs"
          sudo ssh -o StrictHostKeyChecking=no -i /home/runner/key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_FRONTEND_HOST_1 }} "sudo mkdir -p /home/${{ secrets.EC2_USER }}/hello-world-frontend"
          sudo ssh -o StrictHostKeyChecking=no -i /home/runner/key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_FRONTEND_HOST_1 }} "cd /home/${{ secrets.EC2_USER }}/hello-world-frontend && sudo npm install"
          sudo ssh -o StrictHostKeyChecking=no -i /home/runner/key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_FRONTEND_HOST_1 }} "cd /home/${{ secrets.EC2_USER }}/hello-world-frontend && sudo npm test -- --watchAll=false"
          sudo rm /home/runner/key.pem

      - name: Add EC2 Instance 2 to known_hosts
        run: |
          sudo ssh-keyscan -H ${{ secrets.EC2_FRONTEND_HOST_2 }} | sudo tee -a /home/runner/.ssh/known_hosts

      - name: Test on EC2 Instance 2
        env:
          HOST: ${{ secrets.EC2_FRONTEND_HOST_2 }}
          USERNAME: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_KEY }}
        run: |
          sudo echo "${{ secrets.EC2_KEY }}" | sudo tee /home/runner/key.pem
          sudo chmod 600 /home/runner/key.pem
          sudo ssh -o StrictHostKeyChecking=no -i /home/runner/key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_FRONTEND_HOST_2 }} "sudo curl -fsSL https://rpm.nodesource.com/setup_20.x | sudo bash -"
          sudo ssh -o StrictHostKeyChecking=no -i /home/runner/key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_FRONTEND_HOST_2 }} "sudo yum install -y nodejs"
          sudo ssh -o StrictHostKeyChecking=no -i /home/runner/key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_FRONTEND_HOST_2 }} "sudo mkdir -p /home/${{ secrets.EC2_USER }}/hello-world-frontend"
          sudo ssh -o StrictHostKeyChecking=no -i /home/runner/key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_FRONTEND_HOST_2 }} "cd /home/${{ secrets.EC2_USER }}/hello-world-frontend && sudo npm install"
          sudo ssh -o StrictHostKeyChecking=no -i /home/runner/key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_FRONTEND_HOST_2 }} "cd /home/${{ secrets.EC2_USER }}/hello-world-frontend && sudo npm test -- --watchAll=false"
          sudo rm /home/runner/key.pem

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Create .ssh directory with correct permissions
        run: |
          sudo mkdir -p /home/runner/.ssh
          sudo chmod 700 /home/runner/.ssh

      - name: Add EC2 Instance 1 to known_hosts
        run: |
          sudo ssh-keyscan -H ${{ secrets.EC2_FRONTEND_HOST_1 }} | sudo tee -a /home/runner/.ssh/known_hosts

      - name: Build on EC2 Instance 1
        env:
          HOST: ${{ secrets.EC2_FRONTEND_HOST_1 }}
          USERNAME: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_KEY }}
        run: |
          sudo echo "${{ secrets.EC2_KEY }}" | sudo tee /home/runner/key.pem
          sudo chmod 600 /home/runner/key.pem
          sudo ssh -o StrictHostKeyChecking=no -i /home/runner/key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_FRONTEND_HOST_1 }} "cd /home/${{ secrets.EC2_USER }}/hello-world-frontend && sudo npm run build"
          sudo rm /home/runner/key.pem

      - name: Add EC2 Instance 2 to known_hosts
        run: |
          sudo ssh-keyscan -H ${{ secrets.EC2_FRONTEND_HOST_2 }} | sudo tee -a /home/runner/.ssh/known_hosts

      - name: Build on EC2 Instance 2
        env:
          HOST: ${{ secrets.EC2_FRONTEND_HOST_2 }}
          USERNAME: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_KEY }}
        run: |
          sudo echo "${{ secrets.EC2_KEY }}" | sudo tee /home/runner/key.pem
          sudo chmod 600 /home/runner/key.pem
          sudo ssh -o StrictHostKeyChecking=no -i /home/runner/key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_FRONTEND_HOST_2 }} "cd /home/${{ secrets.EC2_USER }}/hello-world-frontend && sudo npm run build"
          sudo rm /home/runner/key.pem

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Create .ssh directory with correct permissions
        run: |
          sudo mkdir -p /home/runner/.ssh
          sudo chmod 700 /home/runner/.ssh

      - name: Add EC2 Instance 1 to known_hosts
        run: |
          sudo ssh-keyscan -H ${{ secrets.EC2_FRONTEND_HOST_1 }} | sudo tee -a /home/runner/.ssh/known_hosts

      - name: Deploy to EC2 Instance 1
        env:
          HOST: ${{ secrets.EC2_FRONTEND_HOST_1 }}
          USERNAME: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_KEY }}
        run: |
          sudo echo "${{ secrets.EC2_KEY }}" | sudo tee /home/runner/key.pem
          sudo chmod 600 /home/runner/key.pem
          sudo ssh -o StrictHostKeyChecking=no -i /home/runner/key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_FRONTEND_HOST_1 }} "sudo cp -r /home/${{ secrets.EC2_USER }}/hello-world-frontend/build/* /usr/share/nginx/html/ && sudo systemctl restart nginx"
          sudo rm /home/runner/key.pem

      - name: Add EC2 Instance 2 to known_hosts
        run: |
          sudo ssh-keyscan -H ${{ secrets.EC2_FRONTEND_HOST_2 }} | sudo tee -a /home/runner/.ssh/known_hosts

      - name: Deploy to EC2 Instance 2
        env:
          HOST: ${{ secrets.EC2_FRONTEND_HOST_2 }}
          USERNAME: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_KEY }}
        run: |
          sudo echo "${{ secrets.EC2_KEY }}" | sudo tee /home/runner/key.pem
          sudo chmod 600 /home/runner/key.pem
          sudo ssh -o StrictHostKeyChecking=no -i /home/runner/key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_FRONTEND_HOST_2 }} "sudo cp -r /home/${{ secrets.EC2_USER }}/hello-world-frontend/build/* /usr/share/nginx/html/ && sudo systemctl restart nginx"
          sudo rm /home/runner/key.pem
